一、升级：
1. di update/modify/NavigatorNavigationBarStylesAndroid.js project/node_modules/react-native/Libraries/CustomComponents/Navigator/NavigatorNavigationBarStylesAndroid.js
2. di update/modify/NavigatorNavigationBarStylesIOS.js project/node_modules/react-native/Libraries/Utilities/NavigatorNavigationBarStylesIOS.js
3. di update/modify/StyleSheet.js project/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js
4. di update/modify/assetPathUtils.js project/node_modules/react-native/local-cli/bundle/assetPathUtils.js
5. di update/modify/minify.js project/node_modules/react-native/packager/react-packager/src/JSTransformer/worker/minify.js
6. di update/modify/Dimensions.js project/node_modules/react-native/Libraries/Utilities/Dimensions.js
7. di update/modify/buildBundle.js project/node_modules/react-native/local-cli/bundle/buildBundle.js

二、发布大版本
只有添加java或者object-c的代码的时候才发布大版本
1.android发布
    进入tools，执行release-android，生成apk: server/public/download/apk/yxjqd.apk
    如果需要发布测试版本，执行release-android test
2.ios发布
    打开xcode工程,Produce->Scheme->Edit Scheme->Release 然后编译就可以了

三、发布小版本
进入tools，执行genbundle，生成www:server/public/download/www

四、环境搭建
1.android找不到support-v4:23.2.1，使用android update sdk --no-ui --all --filter "extra-android-m2repository" 安装依赖
2.ios打包生成IPA包时遇到错误:missing ios distribution signing identity for XXXXXXXXXX
    解决方法:
    1.首先， 去此链接:https://developer.apple.com/certificationauthority/AppleWWDRCA.cer ,下载文件，并双击安装。
    2.然后进入钥匙串 选择菜单栏的显示 - 显示已过期证书
    3.然后在钥匙串 -（登录和系统中查看）  可以看到Apple WorldWide Developer Relations CertXXXXXXX (并且显示此证书已过去)删除即可
    不一定（登录和系统）都有此证书。
3.ios升级后xcode无法打包
将系统升级对应到包拷到电脑目录：
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport/
重启xcode即可（系统包已经拷到方哥的U盘，也可以拿U盘到我这里来拷）

五、发布注意事项
1.发布ios大版本
    a.修改project/ios/YXjqd/Info.plist
        修改CFBundleShortVersionString，如果原来为1.0, 修改为1.1,依次类推
        修改CFBundleVersion，每次发布ios都需要+1，如果原来为1，修改为2
    b.修改project/App/config/Constants.js
        ISSUE: true,
        ISSUE_IOS: true,
    c.修改erver/public/download/apks/admin/apks/json/version.json
        修改iosJsVersionCode为0，其他的不变
    d.发布的时候后台是否发布为"否"
    e.工具：xcode的scheme设置为release

2.发布android大版本
    a.修改project/android/app/build.gradle
        修改versionCode，如果原来为10, 修改为11,依次类推
        修改versionName，如果原来为1.0, 修改为1.1,依次类推
    b.修改project/App/config/Constants.js
        ISSUE: true,
        ISSUE_IOS: false,
    c.修改erver/public/download/apks/admin/apks/json/version.json
        修改androidJsVersionCode为0, versionCode为build.gradle中的versionCode+1048576, versionName为build.gradle中的versionName, 其他的不变
    d.工具：进入project/tools 使用脚本release-android

3.发布android测试大版本
    a.修改project/android/app/build.gradle
        修改versionCode，如果原来为10, 修改为11,依次类推
        修改versionName，如果原来为10001.0, 修改为10001.1,依次类推
    b.修改project/App/config/Constants.js
        ISSUE: true,
        ISSUE_IOS: false,
    c.修改erver/public/download/apks/admin/apks/json/version.json
        修改androidJsVersionCode为0, versionCode为build.gradle中的versionCode+1048576, versionName为build.gradle中的versionName, 其他的不变
    d.工具：进入project/tools 使用脚本release-android test

4.发布ios小版本
    a.修改project/App/config/Constants.js
        ISSUE: true,
        ISSUE_IOS: false,
    b.修改erver/public/download/apks/admin/apks/json/version.json
        修改iosJsVersionCode，如果原来为0, 修改为1,依次类推
    c.工具：进入project/tools 使用脚本genbundle

5.发布android小版本
    a.修改project/App/config/Constants.js
        ISSUE: true,
        ISSUE_IOS: false,
    b.修改erver/public/download/apks/admin/apks/json/version.json
        修改androidJsVersionCode, 如果原来为0, 修改为1,依次类推
    c.工具：进入project/tools 使用脚本genbundle
