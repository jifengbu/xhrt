'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _zscroller = require('zscroller');

var _zscroller2 = _interopRequireDefault(_zscroller);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// at lease 1s for ux
function fake() {
  return new Promise(function (resolve) {
    setTimeout(resolve, 1000);
  });
}

var defaultScrollerOptions = {
  scrollingX: false
};

var PullToRefresh = _react2["default"].createClass({
  displayName: 'PullToRefresh',

  propTypes: {
    loadingFunction: _react.PropTypes.func.isRequired,
    icon: _react.PropTypes.element,
    prefixCls: _react.PropTypes.string,
    loading: _react.PropTypes.element,
    disabled: _react.PropTypes.bool,
    className: _react.PropTypes.string,
    style: _react.PropTypes.object,
    contentClassName: _react.PropTypes.string,
    contentStyle: _react.PropTypes.object,
    distanceToRefresh: _react.PropTypes.number,
    children: _react.PropTypes.any,
    scrollerOptions: _react.PropTypes.object
  },

  getDefaultProps: function getDefaultProps() {
    return {
      prefixCls: 'rmc-pull-to-refresh',
      distanceToRefresh: 50
    };
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    var props = this.props;
    var refs = this.refs;
    var prefixCls = props.prefixCls;

    var containerClassList = refs.container.classList;
    this.domScroller = new _zscroller2["default"](refs.content, (0, _extends3["default"])({}, defaultScrollerOptions, props.scrollerOptions));
    var scroller = this.domScroller.scroller;
    scroller.activatePullToRefresh(props.distanceToRefresh, function () {
      containerClassList.add(prefixCls + '-active');
    }, function () {
      containerClassList.remove(prefixCls + '-active');
      containerClassList.remove(prefixCls + '-loading');
    }, function () {
      containerClassList.add(prefixCls + '-loading');
      Promise.all([props.loadingFunction(), fake()]).then(_this.finishPullToRefresh, _this.finishPullToRefresh);
    });
  },


  // componentDidUpdate() {
  //   this.domScroller.reflow();
  // },

  componentWillUnMount: function componentWillUnMount() {
    this.domScroller.destroy();
  },
  finishPullToRefresh: function finishPullToRefresh() {
    this.domScroller.scroller.finishPullToRefresh();
  },
  render: function render() {
    var _props = this.props;
    var prefixCls = _props.prefixCls;
    var children = _props.children;
    var icon = _props.icon;
    var loading = _props.loading;
    var _props$className = _props.className;
    var className = _props$className === undefined ? '' : _props$className;
    var style = _props.style;
    var contentStyle = _props.contentStyle;
    var _props$contentClassNa = _props.contentClassName;
    var contentClassName = _props$contentClassNa === undefined ? '' : _props$contentClassNa;

    return _react2["default"].createElement(
      'div',
      { className: className + ' ' + prefixCls, style: style, ref: 'container' },
      _react2["default"].createElement(
        'div',
        {
          ref: 'content',
          className: prefixCls + '-content ' + contentClassName,
          style: contentStyle
        },
        _react2["default"].createElement(
          'div',
          { key: 'ptr', ref: 'ptr', className: prefixCls + '-ptr' },
          _react2["default"].createElement(
            'div',
            { className: prefixCls + '-ptr-icon' },
            icon
          ),
          _react2["default"].createElement(
            'div',
            { className: prefixCls + '-ptr-loading' },
            loading
          )
        ),
        children
      )
    );
  }
});

exports["default"] = PullToRefresh;
module.exports = exports['default'];