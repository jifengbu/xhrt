'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Popup = require('rmc-picker/lib/Popup');

var _Popup2 = _interopRequireDefault(_Popup);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function noop() {}

var PopupCascader = function (_React$Component) {
    (0, _inherits3["default"])(PopupCascader, _React$Component);

    function PopupCascader(props) {
        (0, _classCallCheck3["default"])(this, PopupCascader);

        var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));

        _this.onPickerChange = function (pickerValue) {
            _this.setState({
                pickerValue: pickerValue
            });
            if (_this.props.cascader.props.onChange) {
                _this.props.cascader.props.onChange(pickerValue);
            }
        };
        _this.onOk = function () {
            _this.props.onChange(_this.cascader.getValue().filter(function (c) {
                return c !== null && c !== undefined;
            }));
        };
        _this.saveRef = function (cascader) {
            _this.cascader = cascader;
        };
        _this.fireVisibleChange = function (visible) {
            if (_this.state.visible !== visible) {
                if (!('visible' in _this.props)) {
                    _this.setVisibleState(visible);
                }
                _this.props.onVisibleChange(visible);
            }
        };
        _this.state = {
            pickerValue: null,
            visible: _this.props.visible || false
        };
        return _this;
    }

    PopupCascader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        if ('visible' in nextProps) {
            this.setVisibleState(nextProps.visible);
        }
    };

    PopupCascader.prototype.setVisibleState = function setVisibleState(visible) {
        this.setState({
            visible: visible
        });
        if (!visible) {
            this.setState({
                pickerValue: null
            });
        }
    };

    PopupCascader.prototype.render = function render() {
        var cascader = React.cloneElement(this.props.cascader, {
            value: this.state.pickerValue || this.props.value,
            onChange: this.onPickerChange,
            ref: this.saveRef,
            data: this.props.cascader.props.data
        });
        return React.createElement(_Popup2["default"], (0, _extends3["default"])({}, this.props, { onVisibleChange: this.fireVisibleChange, onOk: this.onOk, content: cascader, visible: this.state.visible }));
    };

    return PopupCascader;
}(React.Component);

exports["default"] = PopupCascader;

PopupCascader.defaultProps = {
    prefixCls: 'rmc-picker-popup',
    onVisibleChange: noop,
    onChange: noop
};
module.exports = exports['default'];