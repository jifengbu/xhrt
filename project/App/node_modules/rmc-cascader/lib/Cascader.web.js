'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Picker = require('rmc-picker/lib/Picker.web');

var _Picker2 = _interopRequireDefault(_Picker);

var _CascaderMixin = require('./CascaderMixin');

var _CascaderMixin2 = _interopRequireDefault(_CascaderMixin);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Cascader = React.createClass({
    displayName: 'Cascader',

    mixins: [_CascaderMixin2["default"]],
    getDefaultProps: function getDefaultProps() {
        return {
            prefixCls: 'rmc-cascader',
            pickerPrefixCls: 'rmc-picker',
            data: [],
            disabled: false
        };
    },
    render: function render() {
        var _this = this;

        var props = this.props;
        var prefixCls = props.prefixCls;
        var pickerPrefixCls = props.pickerPrefixCls;
        var className = props.className;
        var rootNativeProps = props.rootNativeProps;
        var disabled = props.disabled;
        var pickerItemStyle = props.pickerItemStyle;

        var value = this.state.value;
        var childrenTree = this.getChildrenTree();
        var cols = this.getColArray().map(function (v, i) {
            // do not remove ${prefixCls}-main-item
            return React.createElement(
                'div',
                { key: i, className: prefixCls + '-item ' + prefixCls + '-main-item' },
                React.createElement(
                    _Picker2["default"],
                    { itemStyle: pickerItemStyle, disabled: disabled, prefixCls: pickerPrefixCls, selectedValue: value[i], onValueChange: _this.onValueChange.bind(_this, i) },
                    childrenTree[i] || []
                )
            );
        });
        return React.createElement(
            'div',
            (0, _extends3["default"])({}, rootNativeProps, { className: (0, _classnames2["default"])(className, prefixCls) }),
            cols
        );
    }
});
exports["default"] = Cascader;
module.exports = exports['default'];